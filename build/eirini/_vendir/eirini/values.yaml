opi:
  # used when bits service is using ingress
  use_registry_ingress: false
  # set ingress_endoint when 'use_registry_ingress' is set to true
  ingress_endpoint: ~

  deny_app_ingress: true
  # secret name in app namespace. Created by secret smuggler
  registry_secret_name: registry-credentials
  disk_limit_mb: 2048
  namespace: eirini
  version: 0.0.0
  serviceName: "eirini-opi"

  unsafe_allow_automount_service_account_token: false
  serve_plaintext: false

  cc_api:
    serviceName: "api"
    tls_disabled: false
    protocol: https
    port: 9023

  tls:
    opiCapiClient:
      secretName: "secrets-2.16.4-2"
      keyPath: "cc-server-crt-key"
      certPath: "cc-server-crt"
    opiServer:
      secretName: "secrets-2.16.4-2"
      certPath: "eirini-client-crt"
      keyPath: "eirini-client-crt-key"
    capi:
      secretName: "secrets-2.16.4-2"
      caPath: "internal-ca-cert"
    eirini:
      secretName: "secrets-2.16.4-2"
      caPath: "internal-ca-cert"

  # components
  events:
    enable: true
    tls:
      capiClient:
        secretName: "secrets-2.16.4-2"
        keyPath: "cc-server-crt-key"
        certPath: "cc-server-crt"
      capi:
        secretName: "secrets-2.16.4-2"
        caPath: "internal-ca-cert"

  logs:
    enable: true
    serviceName: "doppler-doppler"
    tls:
      client:
        secretName: "secrets-2.16.4-2"
        keyPath: "loggregator-agent-cert-key"
        certPath: "loggregator-agent-cert"
      server:
        secretName: "secrets-2.16.4-2"
        caPath: "internal-ca-cert"

  metrics:
    enable: true
    tls:
      client:
        secretName: "secrets-2.16.4-2"
        keyPath: "doppler-cert-key"
        certPath: "doppler-cert"
      server:
        secretName: "secrets-2.16.4-2"
        caPath: "internal-ca-cert"

  routing:
    enable: true
    nats:
      secretName: "secrets-2.16.4-2"
      passwordPath: "nats-password"
      serviceName: "nats-nats"

  secretSmuggler:
    enable: true
    scfSecretName: "secrets-2.16.4-2"

  staging:
    enable: true
    tls:
      client:
        secretName: "secrets-2.16.4-2"
        certPath: "eirini-client-crt"
        keyPath: "eirini-client-crt-key"
      cc_uploader:
        secretName: "secrets-2.16.4-2"
        certPath: "cc-server-crt"
        keyPath: "cc-server-crt-key"
      ca:
        secretName: "secrets-2.16.4-2"
        path: "internal-ca-cert"
      stagingReporter:
        secretName: "secrets-2.16.4-2"
        certPath: "eirini-client-crt"
        keyPath: "eirini-client-crt-key"
        caPath: "internal-ca-cert"

  tasks:
    enable: true
    tls:
      taskReporter:
        secretName: "secrets-2.16.4-2"
        keyPath: "cc-server-crt-key"
        certPath: "cc-server-crt"
        caPath: "internal-ca-cert"

  lrpController:
    enable: true
    tls:
      secretName: "secrets-2.16.4-2"
      certPath: "eirini-client-crt"
      keyPath: "eirini-client-crt-key"
      caPath: "internal-ca-cert"

  kubecf:
    enable: false

services:
  loadbalanced: false
env:
  # Base domain of the SCF cluster.
  # Example: "my-scf-cluster.com"
  # used to get bits service URL if it is load balanced and not behind ingress
  DOMAIN: ~

kube:
  # used to construct bits service URL if it is not load balanced and does not behind ingress
  external_ips: []
  resources:
    opi:
      requests:
        cpu: 20m
        memory: 20Mi
      limits:
        cpu: 100m
        memory: 100Mi
    eirini_controller:
      requests:
        cpu: 15m
        memory: 15Mi
      limits:
        cpu: 100m
        memory: 200Mi
    events:
      requests:
        cpu: 15m
        memory: 15Mi
      limits:
        cpu: 100m
        memory: 100Mi
    task_reporter:
      requests:
        cpu: 15m
        memory: 15Mi
      limits:
        cpu: 100m
        memory: 100Mi
    instance_index_env_injector:
      requests:
        cpu: 20m
        memory: 20Mi
      limits:
        cpu: 100m
        memory: 100Mi
    metrics:
      requests:
        cpu: 15m
        memory: 15Mi
      limits:
        cpu: 100m
        memory: 100Mi
    routing:
      requests:
        cpu: 30m
        memory: 45Mi
      limits:
        cpu: 200m
        memory: 300Mi
    staging:
      requests:
        cpu: 15m
        memory: 15Mi
      limits:
        cpu: 100m
        memory: 100Mi


global:
  rootfs_version: v75.0.0

instanceIndexEnvInjector: {}
