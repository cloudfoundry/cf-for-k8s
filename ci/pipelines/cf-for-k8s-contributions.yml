## ======================================================================
## GENERATED FILE. DO NOT EDIT
## Generated by running ./ci/configure cf-for-k8s-contributions from ~/workspace/cf-for-k8s
## ======================================================================

groups:
- name: pr-validation
  jobs:
  - fail-prs-to-cf-for-k8s-master
  - pass-prs-to-cf-for-k8s-develop
  - run-unit-tests-on-pr
  - validate-pr-on-gke
  - validate-pr-on-gke-external-db
  - validate-pr-on-gke-rds
  - validate-pr-on-newest-k8s-kind
  - validate-pr-on-oldest-k8s-kind
  - test-vendir-sync-on-cf-for-k8s-pr
- name: all-autobumps
  jobs:
  - capi-k8s-release-run-unit-tests
  - capi-k8s-release-validate-on-newest-k8s-version
  - capi-k8s-release-validate-on-oldest-k8s-version
  - capi-k8s-release-validate-upgrade
  - capi-k8s-release-push-to-develop
  - cf-k8s-logging-run-unit-tests
  - cf-k8s-logging-validate-on-newest-k8s-version
  - cf-k8s-logging-validate-on-oldest-k8s-version
  - cf-k8s-logging-validate-upgrade
  - cf-k8s-logging-push-to-develop
  - eirini-release-run-unit-tests
  - eirini-release-validate-on-newest-k8s-version
  - eirini-release-validate-on-oldest-k8s-version
  - eirini-release-validate-upgrade
  - eirini-release-push-to-develop
  - kpack-run-unit-tests
  - kpack-validate-on-newest-k8s-version
  - kpack-validate-on-oldest-k8s-version
  - kpack-validate-upgrade
  - kpack-push-to-develop
  - metric-proxy-run-unit-tests
  - metric-proxy-validate-on-newest-k8s-version
  - metric-proxy-validate-on-oldest-k8s-version
  - metric-proxy-validate-upgrade
  - metric-proxy-push-to-develop
  - uaa-run-unit-tests
  - uaa-validate-on-newest-k8s-version
  - uaa-validate-on-oldest-k8s-version
  - uaa-validate-upgrade
  - uaa-push-to-develop
- name: capi-k8s-release
  jobs:
  - capi-k8s-release-run-unit-tests
  - capi-k8s-release-validate-on-newest-k8s-version
  - capi-k8s-release-validate-on-oldest-k8s-version
  - capi-k8s-release-validate-upgrade
  - capi-k8s-release-push-to-develop
- name: cf-k8s-logging
  jobs:
  - cf-k8s-logging-run-unit-tests
  - cf-k8s-logging-validate-on-newest-k8s-version
  - cf-k8s-logging-validate-on-oldest-k8s-version
  - cf-k8s-logging-validate-upgrade
  - cf-k8s-logging-push-to-develop
- name: eirini-release
  jobs:
  - eirini-release-run-unit-tests
  - eirini-release-validate-on-newest-k8s-version
  - eirini-release-validate-on-oldest-k8s-version
  - eirini-release-validate-upgrade
  - eirini-release-push-to-develop
- name: kpack
  jobs:
  - kpack-run-unit-tests
  - kpack-validate-on-newest-k8s-version
  - kpack-validate-on-oldest-k8s-version
  - kpack-validate-upgrade
  - kpack-push-to-develop
- name: metric-proxy
  jobs:
  - metric-proxy-run-unit-tests
  - metric-proxy-validate-on-newest-k8s-version
  - metric-proxy-validate-on-oldest-k8s-version
  - metric-proxy-validate-upgrade
  - metric-proxy-push-to-develop
- name: uaa
  jobs:
  - uaa-run-unit-tests
  - uaa-validate-on-newest-k8s-version
  - uaa-validate-on-oldest-k8s-version
  - uaa-validate-upgrade
  - uaa-push-to-develop
- name: buildpacks
  jobs:
  - bump-buildpacks
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
resources:
- name: cf-for-k8s-develop
  type: git
  icon: github
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((cf_for_k8s_readwrite_deploy_key.private_key))
    ignore_paths:
    - ci/**
- name: cf-for-k8s-ci
  type: git
  icon: github
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    paths:
    - ci/**
- name: weekday-pm
  type: time
  icon: clock-outline
  source:
    days:
    - Monday
    - Tuesday
    - Wednesday
    - Thursday
    - Friday
    start: 6:00 PM
    stop: 7:00 PM
    location: America/Los_Angeles
- name: capi-k8s-release
  type: git
  icon: github
  source:
    branch: ci-passed
    uri: git@github.com:cloudfoundry/capi-k8s-release
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
- name: cf-k8s-logging
  type: github-release
  icon: github
  source:
    owner: cloudfoundry
    repository: cf-k8s-logging
    access_token: ((cf_deployment_release_bot_access_token))
- name: eirini-release
  type: github-release
  icon: github
  source:
    owner: cloudfoundry-incubator
    repository: eirini-release
    access_token: ((cf_deployment_release_bot_access_token))
- name: kpack
  type: github-release
  icon: github
  source:
    owner: pivotal
    repository: kpack
    access_token: ((cf_deployment_release_bot_access_token))
    pre_release: true
- name: metric-proxy
  type: github-release
  icon: github
  source:
    owner: cloudfoundry
    repository: metric-proxy
    access_token: ((cf_deployment_release_bot_access_token))
- name: uaa
  type: github-release
  icon: github
  source:
    owner: cloudfoundry
    repository: uaa
    access_token: ((cf_deployment_release_bot_access_token))
- name: terraform
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: relint-k8s-cluster-state
      credentials: ((dev_cluster_pool_gcs_admin_service_account_json))
- name: ready-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: k8s-dev/ready
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))
- name: destroy-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: k8s-dev/destroy
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))
- name: cf-for-k8s-gke-terraform-templates
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    branch: develop
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    paths:
    - deploy/gke/terraform/**
- name: cf-for-k8s-kind-gcp-terraform-templates
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    branch: develop
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    paths:
    - deploy/kind-on-gcp/terraform/**
- name: cf-for-k8s-pr-master
  type: pull-request
  icon: github
  source:
    access_token: ((github_status_bot_repo_access_token))
    repository: cloudfoundry/cf-for-k8s
    disable_forks: false
    base_branch: master
- name: cf-for-k8s-pr-develop
  type: pull-request
  icon: github
  source:
    access_token: ((github_status_bot_repo_access_token))
    repository: cloudfoundry/cf-for-k8s
    disable_forks: false
    base_branch: develop
- name: cf-for-k8s-pr-all-branches-and-forks
  type: pull-request
  icon: github
  source:
    access_token: ((github_status_bot_repo_access_token))
    repository: cloudfoundry/cf-for-k8s
    disable_forks: false
- name: runtime-ci
  type: git
  icon: github
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git
- name: terraform-rds
  type: terraform
  source:
    env_name: aws-rds
    backend_type: gcs
    backend_config:
      bucket: relint-k8s-cluster-state
      credentials: ((dev_cluster_pool_gcs_admin_service_account_json))
- name: ruby-buildpack
  type: docker-image
  source:
    repository: gcr.io/paketo-community/ruby
- name: python-buildpack
  type: docker-image
  source:
    repository: gcr.io/paketo-community/python
- name: java-buildpack
  type: docker-image
  source:
    repository: gcr.io/paketo-buildpacks/java
- name: nodejs-buildpack
  type: docker-image
  source:
    repository: gcr.io/paketo-buildpacks/nodejs
- name: go-buildpack
  type: docker-image
  source:
    repository: gcr.io/paketo-buildpacks/go
- name: dotnet-core-buildpack
  type: docker-image
  source:
    repository: gcr.io/paketo-buildpacks/dotnet-core
- name: php-buildpack
  type: docker-image
  source:
    repository: gcr.io/paketo-buildpacks/php
- name: procfile-buildpack
  type: docker-image
  source:
    repository: gcr.io/paketo-buildpacks/procfile
jobs:
- name: fail-prs-to-cf-for-k8s-master
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-pr-master
      trigger: true
      version: every
    - get: runtime-ci
  - task: write-pr-check-failure-comment
    file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
    input_mapping:
      pull-request: cf-for-k8s-pr-master
  - put: cf-for-k8s-pr-master
    params:
      path: cf-for-k8s-pr-master
      status: failure
      context: ((pr_context))
      comment_file: pull-request-comment/comment
- name: pass-prs-to-cf-for-k8s-develop
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - get: cf-for-k8s-pr-develop
    trigger: true
    version: every
  - put: cf-for-k8s-pr-develop
    params:
      path: cf-for-k8s-pr-develop
      status: success
      context: ((pr_context))
- name: run-unit-tests-on-pr
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-pr-all-branches-and-forks
      trigger: true
      version: every
    - get: cf-for-k8s-ci
    - get: runtime-ci
  - put: cf-for-k8s-pr-all-branches-and-forks
    params:
      path: cf-for-k8s-pr-all-branches-and-forks
      status: pending
      context: run-unit-tests
  - task: run-unit-tests
    file: cf-for-k8s-ci/ci/tasks/run-unit-tests/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
    on_failure:
      do:
      - task: write-pr-check-failure-comment
        file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
        input_mapping:
          pull-request: cf-for-k8s-pr-all-branches-and-forks
      - put: cf-for-k8s-pr-all-branches-and-forks
        params:
          path: cf-for-k8s-pr-all-branches-and-forks
          status: failure
          context: run-unit-tests
          comment_file: pull-request-comment/comment
    on_success:
      put: cf-for-k8s-pr-all-branches-and-forks
      params:
        path: cf-for-k8s-pr-all-branches-and-forks
        status: success
        context: run-unit-tests
- name: test-vendir-sync-on-cf-for-k8s-pr
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: runtime-ci
    - get: cf-for-k8s-pr-all-branches-and-forks
      params:
        integration_tool: rebase
      trigger: true
      version: every
    - get: cf-for-k8s-ci
  - put: cf-for-k8s-pr-all-branches-and-forks
    params:
      path: cf-for-k8s-pr-all-branches-and-forks
      status: pending
      context: check-vendir-sync
  - task: check-vendir-sync
    file: cf-for-k8s-ci/ci/tasks/check-vendir-sync/task.yml
    input_mapping:
      ci-tasks: cf-for-k8s-ci
      cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
    params:
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
    on_failure:
      do:
      - task: write-pr-check-failure-comment
        file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
        input_mapping:
          pull-request: cf-for-k8s-pr-all-branches-and-forks
      - put: cf-for-k8s-pr-all-branches-and-forks
        params:
          path: cf-for-k8s-pr-all-branches-and-forks
          status: failure
          context: check-vendir-sync
          comment_file: pull-request-comment/comment
    on_success:
      put: cf-for-k8s-pr-all-branches-and-forks
      params:
        path: cf-for-k8s-pr-all-branches-and-forks
        status: success
        context: check-vendir-sync
- name: validate-pr-on-gke
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-pr-all-branches-and-forks
      params:
        integration_tool: rebase
      trigger: true
      version: every
      passed:
      - run-unit-tests-on-pr
      - test-vendir-sync-on-cf-for-k8s-pr
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
    - get: runtime-ci
  - put: cf-for-k8s-pr-all-branches-and-forks
    params:
      path: cf-for-k8s-pr-all-branches-and-forks
      status: pending
      context: upgrade-check-uptime
  - put: ready-pool
    params:
      acquire: true
  - do:
    - task: install-cf-develop
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-develop
        pool-lock: ready-pool
      params:
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        DOMAIN: k8s-dev.relint.rocks
        USE_EXTERNAL_APP_REGISTRY: true
        APP_REGISTRY_HOSTNAME: https://index.docker.io/v1/
        APP_REGISTRY_REPOSITORY_PREFIX: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_USERNAME: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_PASSWORD: ((cf_for_k8s_private_dockerhub.password))
    - task: push-test-app
      file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-develop
      params:
        APP_NAME: jp-node-app
        VERIFY_EXISTING_APP: false
    - task: upgrade-to-pr
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
        pool-lock: ready-pool
      params:
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        UPGRADE: true
        UPTIMER: true
        DOMAIN: k8s-dev.relint.rocks
        USE_EXTERNAL_APP_REGISTRY: true
        APP_REGISTRY_HOSTNAME: https://index.docker.io/v1/
        APP_REGISTRY_REPOSITORY_PREFIX: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_USERNAME: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_PASSWORD: ((cf_for_k8s_private_dockerhub.password))
    - in_parallel:
      - task: run-smoke-tests
        file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
        input_mapping:
          cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
        params:
          SMOKE_TEST_SKIP_SSL: false
      - task: verify-existing-app
        file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
        input_mapping:
          cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
        params:
          APP_NAME: jp-node-app
          VERIFY_EXISTING_APP: true
    on_failure:
      do:
      - task: write-pr-check-failure-comment
        file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
        input_mapping:
          pull-request: cf-for-k8s-pr-all-branches-and-forks
      - put: cf-for-k8s-pr-all-branches-and-forks
        params:
          path: cf-for-k8s-pr-all-branches-and-forks
          status: failure
          context: upgrade-check-uptime
          comment_file: pull-request-comment/comment
    on_success:
      put: cf-for-k8s-pr-all-branches-and-forks
      params:
        path: cf-for-k8s-pr-all-branches-and-forks
        status: success
        context: upgrade-check-uptime
    ensure:
      do:
      - task: delete-cf
        file: cf-for-k8s-ci/ci/tasks/delete-cf/task.yml
        input_mapping:
          pool-lock: ready-pool
        params:
          GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
          GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
          GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      - put: destroy-pool
        params:
          add: ready-pool
      - put: ready-pool
        params:
          remove: ready-pool
- name: validate-pr-on-gke-external-db
  serial: true
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-pr-all-branches-and-forks
      params:
        integration_tool: rebase
      trigger: true
      version: every
      passed:
      - run-unit-tests-on-pr
      - test-vendir-sync-on-cf-for-k8s-pr
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
    - get: cf-for-k8s-gke-terraform-templates
    - get: runtime-ci
  - put: cf-for-k8s-pr-all-branches-and-forks
    params:
      path: cf-for-k8s-pr-all-branches-and-forks
      status: pending
      context: external-db
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-for-k8s-ci
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          echo "pr-validation-gke-ext-db" > tf-vars/env-name.txt
          cat > tf-vars/input.tfvars <<EOT
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          env_name = "$(cat tf-vars/env-name.txt)"
          env_dns_domain = "$(cat tf-vars/env-name.txt).((ci_k8s_root_domain))"
          dns_zone_name = "((ci_k8s_dns_zone_name))"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-gke-terraform-templates/deploy/gke/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - task: install-postgres
    file: cf-for-k8s-ci/ci/tasks/install-postgres/task.yml
    params:
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
  - do:
    - task: install-cf-develop
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-develop
      params:
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        DOMAIN: cf-for-k8s.relint.rocks
        USE_EXTERNAL_APP_REGISTRY: true
        APP_REGISTRY_HOSTNAME: https://index.docker.io/v1/
        APP_REGISTRY_REPOSITORY_PREFIX: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_USERNAME: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_PASSWORD: ((cf_for_k8s_private_dockerhub.password))
        USE_EXTERNAL_DB: "true"
  - task: push-test-app
    file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
    params:
      APP_NAME: jp-node-app
      VERIFY_EXISTING_APP: false
  - task: upgrade-to-pr
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      UPGRADE: true
      UPTIMER: true
      DOMAIN: cf-for-k8s.relint.rocks
      USE_EXTERNAL_APP_REGISTRY: true
      APP_REGISTRY_HOSTNAME: https://index.docker.io/v1/
      APP_REGISTRY_REPOSITORY_PREFIX: ((cf_for_k8s_private_dockerhub.username))
      APP_REGISTRY_USERNAME: ((cf_for_k8s_private_dockerhub.username))
      APP_REGISTRY_PASSWORD: ((cf_for_k8s_private_dockerhub.password))
      USE_EXTERNAL_DB: "true"
  - in_parallel:
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
      params:
        SMOKE_TEST_SKIP_SSL: false
    - task: verify-existing-app
      file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
      params:
        APP_NAME: jp-node-app
        VERIFY_EXISTING_APP: true
  on_failure:
    do:
    - task: write-pr-check-failure-comment
      file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
      input_mapping:
        pull-request: cf-for-k8s-pr-all-branches-and-forks
    - put: cf-for-k8s-pr-all-branches-and-forks
      params:
        path: cf-for-k8s-pr-all-branches-and-forks
        status: failure
        context: external-db
        comment_file: pull-request-comment/comment
  on_success:
    put: cf-for-k8s-pr-all-branches-and-forks
    params:
      path: cf-for-k8s-pr-all-branches-and-forks
      status: success
      context: external-db
  ensure:
    do:
    - task: delete-cf
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: relintdockerhubpushbot/cf-for-k8s-ci
        inputs:
        - name: cf-for-k8s-ci
        - name: tf-vars
        params:
          GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
          GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
          GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        run:
          path: /bin/bash
          args:
          - -ec
          - |
            source cf-for-k8s-ci/ci/helpers/gke.sh
            cluster_name="$(cat tf-vars/env-name.txt)"
            gcloud_auth "${cluster_name}"
            kapp delete -a cf --yes
    - put: terraform
      params:
        terraform_source: cf-for-k8s-gke-terraform-templates/deploy/gke/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: validate-pr-on-gke-rds
  serial: true
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-pr-all-branches-and-forks
      params:
        integration_tool: rebase
      trigger: true
      version: every
      passed:
      - run-unit-tests-on-pr
      - test-vendir-sync-on-cf-for-k8s-pr
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
    - get: cf-for-k8s-gke-terraform-templates
    - get: runtime-ci
    - get: terraform-rds
  - put: cf-for-k8s-pr-all-branches-and-forks
    params:
      path: cf-for-k8s-pr-all-branches-and-forks
      status: pending
      context: upgrade-with-rds
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-for-k8s-ci
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          echo "pr-validation-rds" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          env_name = "$(cat tf-vars/env-name.txt)"
          env_dns_domain = "$(cat tf-vars/env-name.txt).((ci_k8s_root_domain))"
          dns_zone_name = "((ci_k8s_dns_zone_name))"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-gke-terraform-templates/deploy/gke/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - task: initialize-rds
    file: cf-for-k8s-ci/ci/tasks/initialize-rds/task.yml
    params:
      PGPASSWORD: ((ci_k8s_aws_rds_database_password))
  - task: install-cf-develop
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: cf-for-k8s.relint.rocks
      USE_EXTERNAL_APP_REGISTRY: true
      APP_REGISTRY_HOSTNAME: https://index.docker.io/v1/
      APP_REGISTRY_REPOSITORY_PREFIX: ((cf_for_k8s_private_dockerhub.username))
      APP_REGISTRY_USERNAME: ((cf_for_k8s_private_dockerhub.username))
      APP_REGISTRY_PASSWORD: ((cf_for_k8s_private_dockerhub.password))
      USE_EXTERNAL_DB: "true"
  - task: push-test-app
    file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
    params:
      APP_NAME: jp-node-app
      VERIFY_EXISTING_APP: false
    attempts: 3
  - task: upgrade-to-pr
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      UPGRADE: true
      UPTIMER: true
      DOMAIN: cf-for-k8s.relint.rocks
      USE_EXTERNAL_APP_REGISTRY: true
      APP_REGISTRY_HOSTNAME: https://index.docker.io/v1/
      APP_REGISTRY_REPOSITORY_PREFIX: ((cf_for_k8s_private_dockerhub.username))
      APP_REGISTRY_USERNAME: ((cf_for_k8s_private_dockerhub.username))
      APP_REGISTRY_PASSWORD: ((cf_for_k8s_private_dockerhub.password))
      USE_EXTERNAL_DB: "true"
  - in_parallel:
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
      params:
        SMOKE_TEST_SKIP_SSL: false
    - task: verify-existing-app
      file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
      params:
        APP_NAME: jp-node-app
        VERIFY_EXISTING_APP: true
  on_failure:
    do:
    - task: write-pr-check-failure-comment
      file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
      input_mapping:
        pull-request: cf-for-k8s-pr-all-branches-and-forks
    - put: cf-for-k8s-pr-all-branches-and-forks
      params:
        path: cf-for-k8s-pr-all-branches-and-forks
        status: failure
        context: upgrade-with-rds
        comment_file: pull-request-comment/comment
  on_success:
    put: cf-for-k8s-pr-all-branches-and-forks
    params:
      path: cf-for-k8s-pr-all-branches-and-forks
      status: success
      context: upgrade-with-rds
  ensure:
    do:
    - task: delete-cf
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: relintdockerhubpushbot/cf-for-k8s-ci
        inputs:
        - name: cf-for-k8s-ci
        - name: tf-vars
        params:
          GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
          GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
          GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        run:
          path: /bin/bash
          args:
          - -ec
          - |
            source cf-for-k8s-ci/ci/helpers/gke.sh
            cluster_name="$(cat tf-vars/env-name.txt)"
            gcloud_auth "${cluster_name}"
            kapp delete -a cf --yes
    - put: terraform
      params:
        terraform_source: cf-for-k8s-gke-terraform-templates/deploy/gke/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
    - task: delete-rds
      file: cf-for-k8s-ci/ci/tasks/delete-rds/task.yml
      params:
        PGPASSWORD: ((ci_k8s_aws_rds_database_password))
- name: validate-pr-on-newest-k8s-kind
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-pr-all-branches-and-forks
      trigger: true
      version: every
      passed:
      - run-unit-tests-on-pr
      - test-vendir-sync-on-cf-for-k8s-pr
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
    - get: cf-for-k8s-kind-gcp-terraform-templates
    - get: runtime-ci
  - put: cf-for-k8s-pr-all-branches-and-forks
    params:
      path: cf-for-k8s-pr-all-branches-and-forks
      status: pending
      context: newest-supported-k8s-version
  - task: create-tf-vars-file
    file: cf-for-k8s-ci/ci/tasks/create-tf-vars-file/task.yml
    params:
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_REGION: ((ci_k8s_gcp_project_region))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
  - put: terraform
    params:
      terraform_source: cf-for-k8s-kind-gcp-terraform-templates/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: newest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    on_failure:
      do:
      - task: write-pr-check-failure-comment
        file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
        input_mapping:
          pull-request: cf-for-k8s-pr-all-branches-and-forks
      - put: cf-for-k8s-pr-all-branches-and-forks
        params:
          path: cf-for-k8s-pr-all-branches-and-forks
          status: failure
          context: newest-supported-k8s-version
          comment_file: pull-request-comment/comment
    on_success:
      put: cf-for-k8s-pr-all-branches-and-forks
      params:
        path: cf-for-k8s-pr-all-branches-and-forks
        status: success
        context: newest-supported-k8s-version
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-kind-gcp-terraform-templates/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: validate-pr-on-oldest-k8s-kind
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-pr-all-branches-and-forks
      trigger: true
      version: every
      passed:
      - run-unit-tests-on-pr
      - test-vendir-sync-on-cf-for-k8s-pr
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
    - get: cf-for-k8s-kind-gcp-terraform-templates
    - get: runtime-ci
  - put: cf-for-k8s-pr-all-branches-and-forks
    params:
      path: cf-for-k8s-pr-all-branches-and-forks
      status: pending
      context: oldest-supported-k8s-version
  - task: create-tf-vars-file
    file: cf-for-k8s-ci/ci/tasks/create-tf-vars-file/task.yml
    params:
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_REGION: ((ci_k8s_gcp_project_region))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
  - put: terraform
    params:
      terraform_source: cf-for-k8s-kind-gcp-terraform-templates/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: oldest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-pr-all-branches-and-forks
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    on_failure:
      do:
      - task: write-pr-check-failure-comment
        file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
        input_mapping:
          pull-request: cf-for-k8s-pr-all-branches-and-forks
      - put: cf-for-k8s-pr-all-branches-and-forks
        params:
          path: cf-for-k8s-pr-all-branches-and-forks
          status: failure
          context: oldest-supported-k8s-version
          comment_file: pull-request-comment/comment
    on_success:
      put: cf-for-k8s-pr-all-branches-and-forks
      params:
        path: cf-for-k8s-pr-all-branches-and-forks
        status: success
        context: oldest-supported-k8s-version
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-kind-gcp-terraform-templates/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: capi-k8s-release-run-unit-tests
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
    - get: capi-k8s-release
    - get: weekday-pm
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: capi-k8s-release
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: false
      REPO_NAME: capi-k8s-release
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: false
  - task: run-unit-tests
    file: cf-for-k8s-ci/ci/tasks/run-unit-tests/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
- name: capi-k8s-release-validate-on-oldest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - capi-k8s-release-run-unit-tests
    - get: capi-k8s-release
      passed:
      - capi-k8s-release-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: capi-k8s-release
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: false
      REPO_NAME: capi-k8s-release
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: false
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: oldest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: capi-k8s-release-validate-on-newest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - capi-k8s-release-run-unit-tests
    - get: capi-k8s-release
      passed:
      - capi-k8s-release-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: capi-k8s-release
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: false
      REPO_NAME: capi-k8s-release
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: false
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: newest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: capi-k8s-release-validate-upgrade
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - capi-k8s-release-run-unit-tests
    - get: capi-k8s-release
      passed:
      - capi-k8s-release-run-unit-tests
      trigger: true
  - put: ready-pool
    params:
      acquire: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: capi-k8s-release
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: false
      REPO_NAME: capi-k8s-release
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: false
  - task: fresh-install-cf-from-develop
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
  - task: push-test-app
    file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
    params:
      APP_NAME: my-node-app
  - task: upgrade-cf-with-component-bump
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
      UPGRADE: true
      UPTIMER: true
  - in_parallel:
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        SMOKE_TEST_SKIP_SSL: false
    - task: verify-existing-app
      file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        APP_NAME: my-node-app
        VERIFY_EXISTING_APP: true
  - task: delete-cf
    file: cf-for-k8s-ci/ci/tasks/delete-cf/task.yml
    input_mapping:
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
  on_success:
    do:
    - put: destroy-pool
      params:
        add: ready-pool
    - put: ready-pool
      params:
        remove: ready-pool
- name: capi-k8s-release-push-to-develop
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - capi-k8s-release-validate-on-oldest-k8s-version
      - capi-k8s-release-validate-on-newest-k8s-version
      - capi-k8s-release-validate-upgrade
    - get: capi-k8s-release
      passed:
      - capi-k8s-release-validate-on-oldest-k8s-version
      - capi-k8s-release-validate-on-newest-k8s-version
      - capi-k8s-release-validate-upgrade
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: capi-k8s-release
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: false
      REPO_NAME: capi-k8s-release
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: false
  - put: cf-for-k8s-develop
    params:
      repository: cf-for-k8s-bump
      rebase: true
- name: cf-k8s-logging-run-unit-tests
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
    - get: cf-k8s-logging
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: cf-k8s-logging
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: cf-k8s-logging
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: run-unit-tests
    file: cf-for-k8s-ci/ci/tasks/run-unit-tests/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
- name: cf-k8s-logging-validate-on-oldest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - cf-k8s-logging-run-unit-tests
    - get: cf-k8s-logging
      passed:
      - cf-k8s-logging-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: cf-k8s-logging
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: cf-k8s-logging
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: oldest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: cf-k8s-logging-validate-on-newest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - cf-k8s-logging-run-unit-tests
    - get: cf-k8s-logging
      passed:
      - cf-k8s-logging-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: cf-k8s-logging
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: cf-k8s-logging
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: newest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: cf-k8s-logging-validate-upgrade
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - cf-k8s-logging-run-unit-tests
    - get: cf-k8s-logging
      passed:
      - cf-k8s-logging-run-unit-tests
      trigger: true
  - put: ready-pool
    params:
      acquire: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: cf-k8s-logging
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: cf-k8s-logging
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: fresh-install-cf-from-develop
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
  - task: push-test-app
    file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
    params:
      APP_NAME: my-node-app
  - task: upgrade-cf-with-component-bump
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
      UPGRADE: true
      UPTIMER: true
  - in_parallel:
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        SMOKE_TEST_SKIP_SSL: false
    - task: verify-existing-app
      file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        APP_NAME: my-node-app
        VERIFY_EXISTING_APP: true
  - task: delete-cf
    file: cf-for-k8s-ci/ci/tasks/delete-cf/task.yml
    input_mapping:
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
  on_success:
    do:
    - put: destroy-pool
      params:
        add: ready-pool
    - put: ready-pool
      params:
        remove: ready-pool
- name: cf-k8s-logging-push-to-develop
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - cf-k8s-logging-validate-on-oldest-k8s-version
      - cf-k8s-logging-validate-on-newest-k8s-version
      - cf-k8s-logging-validate-upgrade
    - get: cf-k8s-logging
      passed:
      - cf-k8s-logging-validate-on-oldest-k8s-version
      - cf-k8s-logging-validate-on-newest-k8s-version
      - cf-k8s-logging-validate-upgrade
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: cf-k8s-logging
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: cf-k8s-logging
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - put: cf-for-k8s-develop
    params:
      repository: cf-for-k8s-bump
      rebase: true
- name: eirini-release-run-unit-tests
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
    - get: eirini-release
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: eirini-release
    params:
      BUILD_DIR: build/eirini
      GITHUB_RELEASE: true
      REPO_NAME: eirini
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: run-unit-tests
    file: cf-for-k8s-ci/ci/tasks/run-unit-tests/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
- name: eirini-release-validate-on-oldest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - eirini-release-run-unit-tests
    - get: eirini-release
      passed:
      - eirini-release-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: eirini-release
    params:
      BUILD_DIR: build/eirini
      GITHUB_RELEASE: true
      REPO_NAME: eirini
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: oldest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: eirini-release-validate-on-newest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - eirini-release-run-unit-tests
    - get: eirini-release
      passed:
      - eirini-release-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: eirini-release
    params:
      BUILD_DIR: build/eirini
      GITHUB_RELEASE: true
      REPO_NAME: eirini
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: newest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: eirini-release-validate-upgrade
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - eirini-release-run-unit-tests
    - get: eirini-release
      passed:
      - eirini-release-run-unit-tests
      trigger: true
  - put: ready-pool
    params:
      acquire: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: eirini-release
    params:
      BUILD_DIR: build/eirini
      GITHUB_RELEASE: true
      REPO_NAME: eirini
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: fresh-install-cf-from-develop
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
  - task: push-test-app
    file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
    params:
      APP_NAME: my-node-app
  - task: upgrade-cf-with-component-bump
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
      UPGRADE: true
      UPTIMER: true
  - in_parallel:
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        SMOKE_TEST_SKIP_SSL: false
    - task: verify-existing-app
      file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        APP_NAME: my-node-app
        VERIFY_EXISTING_APP: true
  - task: delete-cf
    file: cf-for-k8s-ci/ci/tasks/delete-cf/task.yml
    input_mapping:
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
  on_success:
    do:
    - put: destroy-pool
      params:
        add: ready-pool
    - put: ready-pool
      params:
        remove: ready-pool
- name: eirini-release-push-to-develop
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - eirini-release-validate-on-oldest-k8s-version
      - eirini-release-validate-on-newest-k8s-version
      - eirini-release-validate-upgrade
    - get: eirini-release
      passed:
      - eirini-release-validate-on-oldest-k8s-version
      - eirini-release-validate-on-newest-k8s-version
      - eirini-release-validate-upgrade
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: eirini-release
    params:
      BUILD_DIR: build/eirini
      GITHUB_RELEASE: true
      REPO_NAME: eirini
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - put: cf-for-k8s-develop
    params:
      repository: cf-for-k8s-bump
      rebase: true
- name: kpack-run-unit-tests
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
    - get: kpack
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: kpack
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: kpack
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: run-unit-tests
    file: cf-for-k8s-ci/ci/tasks/run-unit-tests/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
- name: kpack-validate-on-oldest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - kpack-run-unit-tests
    - get: kpack
      passed:
      - kpack-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: kpack
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: kpack
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: oldest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: kpack-validate-on-newest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - kpack-run-unit-tests
    - get: kpack
      passed:
      - kpack-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: kpack
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: kpack
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: newest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: kpack-validate-upgrade
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - kpack-run-unit-tests
    - get: kpack
      passed:
      - kpack-run-unit-tests
      trigger: true
  - put: ready-pool
    params:
      acquire: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: kpack
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: kpack
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: fresh-install-cf-from-develop
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
  - task: push-test-app
    file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
    params:
      APP_NAME: my-node-app
  - task: upgrade-cf-with-component-bump
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
      UPGRADE: true
      UPTIMER: true
  - in_parallel:
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        SMOKE_TEST_SKIP_SSL: false
    - task: verify-existing-app
      file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        APP_NAME: my-node-app
        VERIFY_EXISTING_APP: true
  - task: delete-cf
    file: cf-for-k8s-ci/ci/tasks/delete-cf/task.yml
    input_mapping:
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
  on_success:
    do:
    - put: destroy-pool
      params:
        add: ready-pool
    - put: ready-pool
      params:
        remove: ready-pool
- name: kpack-push-to-develop
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - kpack-validate-on-oldest-k8s-version
      - kpack-validate-on-newest-k8s-version
      - kpack-validate-upgrade
    - get: kpack
      passed:
      - kpack-validate-on-oldest-k8s-version
      - kpack-validate-on-newest-k8s-version
      - kpack-validate-upgrade
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: kpack
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: kpack
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - put: cf-for-k8s-develop
    params:
      repository: cf-for-k8s-bump
      rebase: true
- name: metric-proxy-run-unit-tests
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
    - get: metric-proxy
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: metric-proxy
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: metric-proxy
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: run-unit-tests
    file: cf-for-k8s-ci/ci/tasks/run-unit-tests/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
- name: metric-proxy-validate-on-oldest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - metric-proxy-run-unit-tests
    - get: metric-proxy
      passed:
      - metric-proxy-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: metric-proxy
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: metric-proxy
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: oldest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: metric-proxy-validate-on-newest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - metric-proxy-run-unit-tests
    - get: metric-proxy
      passed:
      - metric-proxy-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: metric-proxy
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: metric-proxy
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: newest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: metric-proxy-validate-upgrade
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - metric-proxy-run-unit-tests
    - get: metric-proxy
      passed:
      - metric-proxy-run-unit-tests
      trigger: true
  - put: ready-pool
    params:
      acquire: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: metric-proxy
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: metric-proxy
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - task: fresh-install-cf-from-develop
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
  - task: push-test-app
    file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
    params:
      APP_NAME: my-node-app
  - task: upgrade-cf-with-component-bump
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
      UPGRADE: true
      UPTIMER: true
  - in_parallel:
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        SMOKE_TEST_SKIP_SSL: false
    - task: verify-existing-app
      file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        APP_NAME: my-node-app
        VERIFY_EXISTING_APP: true
  - task: delete-cf
    file: cf-for-k8s-ci/ci/tasks/delete-cf/task.yml
    input_mapping:
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
  on_success:
    do:
    - put: destroy-pool
      params:
        add: ready-pool
    - put: ready-pool
      params:
        remove: ready-pool
- name: metric-proxy-push-to-develop
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - metric-proxy-validate-on-oldest-k8s-version
      - metric-proxy-validate-on-newest-k8s-version
      - metric-proxy-validate-upgrade
    - get: metric-proxy
      passed:
      - metric-proxy-validate-on-oldest-k8s-version
      - metric-proxy-validate-on-newest-k8s-version
      - metric-proxy-validate-upgrade
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: metric-proxy
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: metric-proxy
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: true
  - put: cf-for-k8s-develop
    params:
      repository: cf-for-k8s-bump
      rebase: true
- name: uaa-run-unit-tests
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
    - get: uaa
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: uaa
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: uaa
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: false
  - task: run-unit-tests
    file: cf-for-k8s-ci/ci/tasks/run-unit-tests/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
- name: uaa-validate-on-oldest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - uaa-run-unit-tests
    - get: uaa
      passed:
      - uaa-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: uaa
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: uaa
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: false
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: oldest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: uaa-validate-on-newest-k8s-version
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - uaa-run-unit-tests
    - get: uaa
      passed:
      - uaa-run-unit-tests
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: uaa
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: uaa
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: false
  - task: create-tf-vars-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      outputs:
      - name: tf-vars
      params:
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          env_suffix=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
          echo "ci-test-cluster-${env_suffix}" > tf-vars/env-name.txt
          cat <<EOT > tf-vars/input.tfvars
          project = "((ci_k8s_gcp_project_name))"
          region = "((ci_k8s_gcp_project_region))"
          zone = "((ci_k8s_gcp_project_zone))"
          service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
          machine_type = "n1-standard-8"
          EOT
  - put: terraform
    params:
      terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
      env_name_file: tf-vars/env-name.txt
      delete_on_failure: true
      var_files:
      - tf-vars/input.tfvars
  - do:
    - task: create-kind-cluster
      file: cf-for-k8s-ci/ci/tasks/create-kind-cluster/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        VERSION_SELECTOR: newest_version
      attempts: 5
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests-on-kind/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        GCP_KEY: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
    ensure:
      put: terraform
      params:
        terraform_source: cf-for-k8s-develop/deploy/kind-on-gcp/terraform
        env_name_file: tf-vars/env-name.txt
        action: destroy
        var_files:
        - tf-vars/input.tfvars
      get_params:
        action: destroy
- name: uaa-validate-upgrade
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - uaa-run-unit-tests
    - get: uaa
      passed:
      - uaa-run-unit-tests
      trigger: true
  - put: ready-pool
    params:
      acquire: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: uaa
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: uaa
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: false
  - task: fresh-install-cf-from-develop
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
  - task: push-test-app
    file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-develop
    params:
      APP_NAME: my-node-app
  - task: upgrade-cf-with-component-bump
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bump
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
      UPGRADE: true
      UPTIMER: true
  - in_parallel:
    - task: run-smoke-tests
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        SMOKE_TEST_SKIP_SSL: false
    - task: verify-existing-app
      file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-bump
      params:
        APP_NAME: my-node-app
        VERIFY_EXISTING_APP: true
  - task: delete-cf
    file: cf-for-k8s-ci/ci/tasks/delete-cf/task.yml
    input_mapping:
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
  on_success:
    do:
    - put: destroy-pool
      params:
        add: ready-pool
    - put: ready-pool
      params:
        remove: ready-pool
- name: uaa-push-to-develop
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
      passed:
      - uaa-validate-on-oldest-k8s-version
      - uaa-validate-on-newest-k8s-version
      - uaa-validate-upgrade
    - get: uaa
      passed:
      - uaa-validate-on-oldest-k8s-version
      - uaa-validate-on-newest-k8s-version
      - uaa-validate-upgrade
      trigger: true
  - task: bump-release-onto-develop
    file: cf-for-k8s-ci/ci/tasks/bump-core-component/task.yml
    input_mapping:
      release: uaa
    params:
      BUILD_DIR: ""
      GITHUB_RELEASE: true
      REPO_NAME: uaa
      VENDIR_GITHUB_API_TOKEN: ((github_status_bot_vendir_github_read_token))
      VENDIR_GITHUB_RELEASE: false
  - put: cf-for-k8s-develop
    params:
      repository: cf-for-k8s-bump
      rebase: true
- name: bump-buildpacks
  public: true
  plan:
  - task: pipeline-revision-info
    config:
      platform: linux
      image_resource:
        source:
          repository: busybox
        type: docker-image
      run:
        path: /bin/echo
        args:
        - -e
        - git@github.com:cloudfoundry/cf-for-k8s 18184529be557ed8eca55d7f4b35b7aea53bf1db ci/templates/cf-for-k8s-contributions.yml \e[31mdirty\e[0m
  - in_parallel:
    - get: ruby-buildpack
      trigger: true
    - get: python-buildpack
      trigger: true
    - get: java-buildpack
      trigger: true
    - get: nodejs-buildpack
      trigger: true
    - get: go-buildpack
      trigger: true
    - get: dotnet-core-buildpack
      trigger: true
    - get: php-buildpack
      trigger: true
    - get: procfile-buildpack
      trigger: true
    - get: cf-for-k8s-ci
    - get: cf-for-k8s-develop
  - put: ready-pool
    params:
      acquire: true
  - task: bump-buildpacks
    file: cf-for-k8s-ci/ci/tasks/bump-buildpacks/task.yml
  - task: validate-buildpacks
    file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bumped
      pool-lock: ready-pool
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
      GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
      GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
      DOMAIN: k8s-dev.relint.rocks
  - task: run-smoke-tests
    file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
    input_mapping:
      cf-for-k8s: cf-for-k8s-bumped
    params:
      SMOKE_TEST_SKIP_SSL: false
  - put: cf-for-k8s-develop
    params:
      repository: cf-for-k8s-bumped
      rebase: true
  ensure:
    do:
    - put: destroy-pool
      params:
        add: ready-pool
    - put: ready-pool
      params:
        remove: ready-pool
