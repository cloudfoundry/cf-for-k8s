---
groups:
- name: azure
  jobs:
  - validate-azure

# Extract common platform and image_resource details so task configs can be more concise
x-config: &common-task-config
  platform: linux
  image_resource:
    type: docker-image
    source:
      repository: relintdockerhubpushbot/cf-for-k8s-ci

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
- name: cf-for-k8s-master
  type: git
  icon: github
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))

- name: cf-for-k8s-ci
  type: git
  icon: github
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    paths:
      - ci/**

- name: weekday-am
  type: time
  icon: clock-outline
  source:
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]
    start: 9:00 AM
    stop: 10:00 AM
    location: America/Los_Angeles

- name: cf-for-k8s-aks-terraform-templates
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    branch: develop
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    paths:
      - deploy/aks/terraform/**

- name: terraform
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: relint-k8s-cluster-state
      credentials: ((dev_cluster_pool_gcs_admin_service_account_json))

jobs:
- name: validate-azure
  public: true
  serial: true
  serial_groups:
    - azure
  plan:
    - in_parallel:
        - get: cf-for-k8s-master
        - get: cf-for-k8s-ci
        - get: weekday-am
          trigger: true
        - get: cf-for-k8s-aks-terraform-templates

    - do:
        - task: create-tf-vars-file
          config:
            platform: linux
            image_resource:
              type: docker-image
              source: {repository: relintdockerhubpushbot/cf-deployment-concourse-tasks}
            outputs:
              - name: tf-vars
            params:
              SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))
            run:
              path: /bin/bash
              args:
                - -ec
                - |
                  echo "ci-test-cluster" > tf-vars/env-name.txt
                  cat <<EOT > tf-vars/input.tfvars
                  service_principal_id = "((aks_cluster_creation_service_principal_username))"
                  service_principal_secret = "((aks_cluster_creation_service_principal_password))"
                  subscription_id = "((relint_azure_subscription_id))"
                  tenant_id = "((aks_cluster_creation_tenant))"
                  google_project = "((ci_k8s_gcp_project_name))"
                  google_region = "((ci_k8s_gcp_project_region))"
                  google_service_account_key = "$(echo ${SERVICE_ACCOUNT_JSON} | jq -c '.' | sed -e 's#"#\\"#g' -e 's#\\n#\\\\n#g')"
                  env_name = "$(cat tf-vars/env-name.txt)"
                  env_dns_domain = "azure-$(cat tf-vars/env-name.txt).((ci_k8s_root_domain))"
                  dns_zone_name = "((ci_k8s_dns_zone_name))"
                  EOT

        - put: terraform
          params:
            terraform_source: cf-for-k8s-aks-terraform-templates/deploy/aks/terraform
            env_name_file: tf-vars/env-name.txt
            delete_on_failure: true
            var_files: [tf-vars/input.tfvars]

        - do:
            - task: install-cf
              config:
                <<: *common-task-config
                inputs:
                  - name: cf-for-k8s-master
                  - name: terraform
                outputs:
                  - name: env-metadata
                run:
                  path: /bin/bash
                  args:
                    - -ec
                    - |
                      export KUBECONFIG=kube-config.yml
                      cluster_name="$(cat terraform/name)"
                      echo '((ci_k8s_gcp_service_account_json))' > gcp-service-account.json
                      jq -r '.kubeconfig' terraform/metadata >> ${KUBECONFIG}

                      export DNS_DOMAIN="azure-$(cat terraform/name).((ci_k8s_root_domain))"

                      echo "Generating install values..."
                      cf-for-k8s-master/hack/generate-values.sh --cf-domain "${DNS_DOMAIN}" --gcr-service-account-json gcp-service-account.json > cf-install-values.yml
                      echo "istio_static_ip: $(jq -r '.lb_static_ip' terraform/metadata)" >> cf-install-values.yml

                      echo "Installing CF..."
                      kapp deploy -a cf -f <(ytt -f cf-for-k8s-master/config -f cf-install-values.yml) -y

                      bosh interpolate --path /cf_admin_password cf-install-values.yml > env-metadata/cf-admin-password.txt
                      echo "${DNS_DOMAIN}" > env-metadata/dns-domain.txt
                      bosh interpolate --path /default_ca/ca /tmp/${DNS_DOMAIN}/cf-vars.yaml > env-metadata/default_ca.ca

        - task: run-smoke-test
          file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
          params:
            SMOKE_TEST_SKIP_SSL: false
          input_mapping:
            cf-for-k8s: cf-for-k8s-master

      ensure:
        do:
          - task: delete-cf
            config:
              <<: *common-task-config
              inputs:
                - name: terraform
              run:
                path: /bin/bash
                args:
                  - -ec
                  - |
                    cluster_name="$(cat terraform/name)"
                    export KUBECONFIG=kube-config.yml
                    jq -r '.kubeconfig' terraform/metadata >> ${KUBECONFIG}

                    kapp delete -a cf --yes
          - put: terraform
            params:
              terraform_source: cf-for-k8s-aks-terraform-templates/deploy/aks/terraform
              env_name_file: tf-vars/env-name.txt
              action: destroy
              var_files: [tf-vars/input.tfvars]
            get_params:
              action: destroy
