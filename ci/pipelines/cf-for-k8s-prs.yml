---
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

resources:
- name: runtime-ci
  type: git
  icon: github-box
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

- name: cf-for-k8s-pr
  type: pull-request
  source:
    access_token: ((github_status_bot_repo_access_token))
    repository: cloudfoundry/cf-for-k8s

# semaphore for the Kubernetes cluster (ci-test-cluster in GKE); it is shared between this pipeline and the main CF for K8s test pipeline
- name: pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-for-k8s
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

# Extract common platform and image_resource details so task configs can be more concise
x-config: &common-task-config
  platform: linux
  image_resource:
    type: docker-image
    source:
      repository: relintdockerhubpushbot/cf-for-k8s-ci

# Extract common platform and image_resource details so task configs can be more concise
test-runner-config: &common-test-config
  platform: linux
  image_resource:
    type: docker-image
    source:
      repository: relintdockerhubpushbot/cf-test-runner

jobs:
- name: run-tests-on-cf-for-k8s-pr
  public: true
  serial: true
  plan:
  - timeout: 4h
    do:
    - put: pool
      params: {acquire: true}
    - in_parallel:
      - get: runtime-ci
      - get: cf-for-k8s-pr
        params:
          integration_tool: rebase
        trigger: true
        version: every
    - put: cf-for-k8s-pr
      params:
        path: cf-for-k8s-pr
        status: pending
        context: tests
    - do:
      - task: delete-cf
        config:
          <<: *common-task-config
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              export KUBECONFIG=kube-config.yml
              gcloud auth activate-service-account --key-file=<(echo '((ci_k8s_gcp_service_account_json))') --project='((ci_k8s_gcp_project_name))' 1>/dev/null 2>&1
              gcloud container clusters get-credentials '((ci_k8s_gke_cluster_name))' --zone '((ci_k8s_gcp_project_zone))' 1>/dev/null 2>&1

              kapp delete -a cf --yes

      - task: install-cf
        config:
          <<: *common-task-config
          inputs:
          - name: cf-for-k8s-pr
          outputs:
          - name: env-metadata
          params:
            DNS_DOMAIN: ((ci_k8s_domain))
            DNS_ZONE_NAME: ((ci_k8s_dns_zone_name))
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              export KUBECONFIG=kube-config.yml
              export DNS_DOMAIN="b$(date +%s).${DNS_DOMAIN}"
              gcloud auth activate-service-account --key-file=<(echo '((ci_k8s_gcp_service_account_json))') --project='((ci_k8s_gcp_project_name))' 1>/dev/null 2>&1
              gcloud container clusters get-credentials '((ci_k8s_gke_cluster_name))' --zone '((ci_k8s_gcp_project_zone))' 1>/dev/null 2>&1

              cf-for-k8s-pr/hack/confirm-network-policy.sh '((ci_k8s_gke_cluster_name))' '((ci_k8s_gcp_project_zone))'
              ./cf-for-k8s-pr/bin/install-cf.sh .
              grep cf_admin_password cf-install-values.yml | cut -d " " -f 2 > env-metadata/cf-admin-password.txt
              echo "${DNS_DOMAIN}" > env-metadata/dns-domain.txt
              echo "Configuring DNS..."
              ./cf-for-k8s-pr/hack/update-gcp-dns.sh "${DNS_DOMAIN}" "${DNS_ZONE_NAME}"

      - task: run-smoke-test
        config:
          <<: *common-test-config
          inputs:
          - name: cf-for-k8s-pr
          - name: env-metadata
          run:
            path: /bin/sh
            args:
            - -ec
            - |
              DNS_DOMAIN=$(cat env-metadata/dns-domain.txt)
              export SMOKE_TEST_API_ENDPOINT="https://api.${DNS_DOMAIN}"
              export SMOKE_TEST_APPS_DOMAIN="${DNS_DOMAIN}"
              export SMOKE_TEST_USERNAME=admin
              export SMOKE_TEST_PASSWORD=$(cat env-metadata/cf-admin-password.txt)
              cf-for-k8s-pr/hack/run-smoke-tests.sh

      - task: delete-cf
        config:
          <<: *common-task-config
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              export KUBECONFIG=kube-config.yml
              gcloud auth activate-service-account --key-file=<(echo '((ci_k8s_gcp_service_account_json))') --project='((ci_k8s_gcp_project_name))' 1>/dev/null 2>&1
              gcloud container clusters get-credentials '((ci_k8s_gke_cluster_name))' --zone '((ci_k8s_gcp_project_zone))' 1>/dev/null 2>&1

              kapp delete -a cf --yes

      on_failure:
        do:
        - task: write-pr-check-failure-comment
          file: runtime-ci/tasks/write-pr-check-failure-comment/task.yml
          input_mapping:
            pull-request: cf-for-k8s-pr
        - put: cf-for-k8s-pr
          params:
            path: cf-for-k8s-pr
            status: failure
            context: tests
            comment_file: pull-request-comment/comment
      on_success:
        put: cf-for-k8s-pr
        params:
          path: cf-for-k8s-pr
          status: success
          context: tests
    ensure:
      put: pool
      params: {release: pool}
