---
groups:
- name: values-rotation
  jobs:
  - validate-values-rotation-redeploy
  - remove-stability-cluster-lock
  - destroy-stability-cluster
  - create-stability-cluster
  - add-stability-cluster-lock

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
- name: cf-for-k8s-master
  type: git
  icon: github
  source:
    branch: master
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))

- name: cf-for-k8s-ci
  type: git
  icon: github
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    paths:
      - ci/**

- name: weekday-pm
  type: time
  icon: clock-outline
  source:
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]
    start: 6:00 PM
    stop: 7:00 PM
    location: America/Los_Angeles

- name: ready-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: k8s-dev/ready
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: destroy-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: k8s-dev/destroy
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: stability-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: master
    pool: cf-for-k8s-stability
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: runtime-ci
  type: git
  icon: github
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

- name: terraform
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: relint-k8s-cluster-state
      credentials: ((dev_cluster_pool_gcs_admin_service_account_json))

- name: cf-for-k8s-gke-terraform-templates
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    branch: develop
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    paths:
      - deploy/gke/terraform/**

# Extract common platform and image_resource details so task configs can be more concise
x-config: &common-task-config
  platform: linux
  image_resource:
    type: docker-image
    source:
      repository: relintdockerhubpushbot/cf-for-k8s-ci

jobs:
- name: validate-values-rotation-redeploy
  serial: true
  public: true
  plan:
    - get: cf-for-k8s-master
    - get: cf-for-k8s-ci
    - get: weekday-pm
      trigger: true

    - put: ready-pool
      params: {acquire: true}

    - task: fresh-install-cf
      input_mapping:
        pool-lock: ready-pool
      config:
        <<: *common-task-config
        inputs:
          - name: cf-for-k8s-master
          - name: cf-for-k8s-ci
          - name: pool-lock
        outputs:
          - name: env-metadata
        params:
          GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
          GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
          GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        run:
          path: /bin/bash
          args:
            - -ec
            - |
              source cf-for-k8s-ci/ci/helpers/gke.sh
              cluster_name="$(cat pool-lock/name)"
              gcloud_auth "${cluster_name}"

              DNS_DOMAIN="${cluster_name}.k8s-dev.relint.rocks"

              echo "Generating install values..."
              cf-for-k8s-master/hack/generate-values.sh --cf-domain "${DNS_DOMAIN}" --gcr-service-account-json gcp-service-account.json > cf-install-values.yml
              echo "istio_static_ip: $(jq -r '.lb_static_ip' pool-lock/metadata)" >> cf-install-values.yml

              echo "Installing CF..."
              kapp deploy -a cf -f <(ytt -f cf-for-k8s-master/config -f cf-install-values.yml) -y

              bosh interpolate --path /cf_admin_password cf-install-values.yml > env-metadata/cf-admin-password.txt
              echo "${DNS_DOMAIN}" > env-metadata/dns-domain.txt
              grep -E "db_admin_password|capi_db_password|uaa_db_password|blobstore_secret_key|cf_admin_password" "/tmp/${cluster_name}.k8s-dev.relint.rocks/cf-vars.yaml" > env-metadata/cf-vars.yaml

    - task: push-test-app
      file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
      params:
        APP_NAME: jp-node-app
        VERIFY_EXISTING_APP: false
      input_mapping:
        cf-for-k8s: cf-for-k8s-master

    - task: upgrade-cf-new-values
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-master
        pool-lock: ready-pool
      params:
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        UPGRADE: true
        UPTIMER: true
    - in_parallel:
        - task: run-smoke-tests
          file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
          input_mapping:
            cf-for-k8s: cf-for-k8s-master
          params:
            SMOKE_TEST_SKIP_SSL: false
        - task: verify-existing-app
          file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
          params:
            APP_NAME: jp-node-app
            VERIFY_EXISTING_APP: true
          input_mapping:
            cf-for-k8s: cf-for-k8s-master

    - task: delete-cf
      input_mapping:
        pool-lock: ready-pool
      config:
        <<: *common-task-config
        inputs:
          - name: cf-for-k8s-ci
          - name: pool-lock
        params:
          GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
          GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
          GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        run:
          path: /bin/bash
          args:
            - -ec
            - |
              source cf-for-k8s-ci/ci/helpers/gke.sh
              cluster_name="$(cat pool-lock/name)"
              gcloud_auth "${cluster_name}"

              kapp delete -a cf --yes

    - put: destroy-pool
      params:
        add: ready-pool

    - put: ready-pool
      params:
        remove: ready-pool

- name: add-stability-cluster-lock
  serial: true
  public: true
  plan:
    - get: runtime-ci

    - task: prepare-to-modify-pool-resource
      file: runtime-ci/tasks/prepare-to-modify-pool-resource/task.yml
      output_mapping:
        pool-resource: stability-pool
      params:
        NAME: stability

    - put: stability-pool
      params:
        add_claimed: stability-pool

- name: create-stability-cluster
  serial: true
  public: true
  plan:
    - in_parallel:
        - get: stability-pool
          passed: [add-stability-cluster-lock]
          trigger: true
        - get: cf-for-k8s-gke-terraform-templates

    - task: create-tf-vars-file
      file: cf-for-k8s-ci/ci/tasks/create-tf-vars-file/task.yml
      params:
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_REGION: ((ci_k8s_gcp_project_region))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))

    - put: terraform
      params:
        terraform_source: cf-for-k8s-gke-terraform-templates/deploy/gke/terraform
        env_name_file: stability-pool/name
        delete_on_failure: true
        var_files: [tf-vars/input.tfvars]

    - task: write-metadata-to-lock-file
      config:
        <<: *common-task-config
        inputs:
          - name: stability-pool
          - name: terraform
        outputs:
          - name: updated-stability-pool
        run:
          path: /bin/bash
          args:
            - -ec
            - |
              cp -v stability-pool/name updated-stability-pool/name
              cp -v terraform/metadata updated-stability-pool/metadata

    - put: stability-pool
      params:
        remove: stability-pool

    - put: stability-pool
      params:
        add: updated-stability-pool

- name: destroy-stability-cluster
  serial: true
  public: true
  plan:
    - in_parallel:
        - put: stability-pool
          params:
            claim: stability
        - get: cf-for-k8s-gke-terraform-templates

    - task: delete-cf
      input_mapping:
        pool-lock: stability-pool
      config:
        <<: *common-task-config
        inputs:
          - name: cf-for-k8s-ci
          - name: pool-lock
        params:
          GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
          GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
          GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        run:
          path: /bin/bash
          args:
            - -ec
            - |
              source cf-for-k8s-ci/ci/helpers/gke.sh
              cluster_name="$(cat pool-lock/name)"
              gcloud_auth "${cluster_name}"

              kapp delete -a cf --yes

    - task: create-tf-vars-file
      file: cf-for-k8s-ci/ci/tasks/create-tf-vars-file/task.yml
      params:
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_REGION: ((ci_k8s_gcp_project_region))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        SERVICE_ACCOUNT_JSON: ((dev_cluster_pool_admin_service_account_json))

    - put: terraform
      params:
        terraform_source: cf-for-k8s-gke-terraform-templates/deploy/gke/terraform
        env_name_file: stability-pool/name
        action: destroy
        var_files: [ tf-vars/input.tfvars ]
      get_params:
        action: destroy

- name: remove-stability-cluster-lock
  serial: true
  public: true
  plan:
    - get: stability-pool
      passed: [ destroy-stability-cluster ]
      trigger: true

    - put: stability-pool
      params:
        remove: stability-pool
