#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")
#@ load("secrets.lib.yml","shared_config_volumes", "shared_config_volume_mounts", "ccng_config_mount_path", "ccng_secrets_mount_path")
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-api-server
  namespace: #@ data.values.system_namespace
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cf-api-server
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9102'
        prometheus.io/path: 'metrics'
      labels:
        app.kubernetes.io/name: cf-api-server
    spec:
      #@ if/end data.values.imagePullSecrets:
      imagePullSecrets: #@ data.values.imagePullSecrets
      containers:
        - name: cf-api-server
          image: #@ data.values.images.ccng
          command:
          - /cloud_controller_ng/bin/cloud_controller
          - -c
          - #@ ccng_config_mount_path
          - -s
          - #@ ccng_secrets_mount_path
          imagePullPolicy: Always
          resources:
            requests:
              memory: 300Mi
            limits:
              memory: 1.2Gi
          volumeMounts:
          - #@ template.replace(shared_config_volume_mounts())
          - name: server-sock
            mountPath: /data/cloud_controller_ng
          #@ if/end data.values.uaa.serverCerts.secretName:
          - name: uaa-certs
            mountPath: /config/uaa/certs
          #@ if/end data.values.eirini.serverCerts.secretName:
          - name: eirini-certs
            mountPath: /config/eirini/certs
          #@ if/end data.values.ccdb.ca_cert:
          - name: database-ca-cert
            mountPath: /config/database/certs
          #@ if/end data.values.metric_proxy.cert.secret_name:
          - name: metric-proxy-certs
            mountPath: /config/metric_proxy/certs
          #@ if/end data.values.metric_proxy.ca.secret_name:
          - name: metric-proxy-ca
            mountPath: /config/metric_proxy/ca
        - name: cf-api-local-worker
          image: #@ data.values.images.ccng
          imagePullPolicy: Always
          command: ["/usr/local/bin/bundle"]
          args: ["exec", "rake", "jobs:local"]
          env:
          - name: CLOUD_CONTROLLER_NG_CONFIG
            value: #@ ccng_config_mount_path
          - name: CLOUD_CONTROLLER_NG_SECRETS
            value: #@ ccng_secrets_mount_path
          resources:
            requests:
              memory: 300Mi
            limits:
              memory: 1.2Gi
          volumeMounts:
          - #@ template.replace(shared_config_volume_mounts())
          - name: nginx-uploads
            mountPath: /tmp/uploads
          #@ if/end data.values.ccdb.ca_cert:
          - name: database-ca-cert
            mountPath: /config/database/certs
        - name: nginx
          image: #@ data.values.images.nginx
          imagePullPolicy: Always
          ports:
          - containerPort: 80
          readinessProbe:
            httpGet:
              port: 80
              path: "/healthz"
          volumeMounts:
          - name: nginx
            mountPath: /etc/nginx
            readOnly: true
          - name: server-sock
            mountPath: /data/cloud_controller_ng
          - name: nginx-logs
            mountPath: /cloud_controller_ng
          - name: nginx-uploads
            mountPath: /tmp/uploads
        - name: statsd-exporter
          image: #@ data.values.images.statsd_exporter
          imagePullPolicy: Always
      serviceAccountName: cf-api-server-service-account
      volumes:
      - #@ template.replace(shared_config_volumes())
      - name: server-sock
        emptyDir: {}
      - name: nginx
        configMap:
          name: nginx
      - name: nginx-logs
        emptyDir: {}
      #@ if/end data.values.uaa.serverCerts.secretName:
      - name: uaa-certs
        secret:
          secretName: #@ data.values.uaa.serverCerts.secretName
      #@ if/end data.values.eirini.serverCerts.secretName:
      - name: eirini-certs
        secret:
          secretName: #@ data.values.eirini.serverCerts.secretName
      #@ if/end data.values.ccdb.ca_cert:
      - name: database-ca-cert
        secret:
          secretName: database-ca-cert
      #@ if/end data.values.metric_proxy.cert.secret_name:
      - name: metric-proxy-certs
        secret:
          secretName: #@ data.values.metric_proxy.cert.secret_name
      #@ if/end data.values.metric_proxy.ca.secret_name:
      - name: metric-proxy-ca
        secret:
          secretName: #@ data.values.metric_proxy.ca.secret_name
      - name: nginx-uploads
        emptyDir: {}

