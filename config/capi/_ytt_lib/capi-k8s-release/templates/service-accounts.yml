#@ load("@ytt:data", "data")
#! api server service account
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cf-api-server-service-account
  namespace: #@ data.values.system_namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "cf:routes-admin"
rules:
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - routes
  verbs:
  - create
  - get
  - update
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "cf:kpack-builds-admin"
rules:
- apiGroups:
  - build.pivotal.io
  resources:
  - images
  verbs:
  - create
  - get
  - update
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "cf:kpack-custombuilder-fetcher"
rules:
- apiGroups:
  - experimental.kpack.pivotal.io
  resources:
  - custombuilders
  - custombuilders/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cf-api-server-service-account-cf-routes-admin
  namespace: #@ data.values.workloads_namespace
subjects:
- kind: ServiceAccount
  name: cf-api-server-service-account
  namespace: #@ data.values.system_namespace
roleRef:
  kind: ClusterRole
  name: "cf:routes-admin"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cf-api-server-service-account-kpack-builds-admin
  namespace: #@ data.values.staging_namespace
subjects:
- kind: ServiceAccount
  name: cf-api-server-service-account
  namespace: #@ data.values.system_namespace
roleRef:
  kind: ClusterRole
  name: "cf:kpack-builds-admin"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cf-api-server-service-account-kpack-custombuilder-fetcher
  namespace: #@ data.values.staging_namespace
subjects:
- kind: ServiceAccount
  name: cf-api-server-service-account
  namespace: #@ data.values.system_namespace
roleRef:
  kind: ClusterRole
  name: "cf:kpack-custombuilder-fetcher"
  apiGroup: rbac.authorization.k8s.io

#! worker service account
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cf-api-worker-service-account
  namespace: #@ data.values.system_namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cf-api-worker-service-account-cf-routes-admin
  namespace: #@ data.values.workloads_namespace
subjects:
- kind: ServiceAccount
  name: cf-api-worker-service-account
  namespace: #@ data.values.system_namespace
roleRef:
  kind: ClusterRole
  name: "cf:routes-admin"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cf-api-worker-service-account-kpack-builds-admin
  namespace: #@ data.values.staging_namespace
subjects:
- kind: ServiceAccount
  name: cf-api-worker-service-account
  namespace: #@ data.values.system_namespace
roleRef:
  kind: ClusterRole
  name: "cf:kpack-builds-admin"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cf-api-controllers-service-account
  namespace: #@ data.values.system_namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "cf:kpack-builds-informer"
rules:
- apiGroups:
  - build.pivotal.io
  resources:
  - builds
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "cf:service-accounts-secrets-fetcher"
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - secrets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "cf:statefulsets-updater"
rules:
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - list
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cf-api-controllers-service-account-kpack-builds-reader
  namespace: #@ data.values.staging_namespace
subjects:
- kind: ServiceAccount
  name: cf-api-controllers-service-account
  namespace: #@ data.values.system_namespace
roleRef:
  kind: ClusterRole
  name: "cf:kpack-builds-informer"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cf-api-controllers-service-account-service-accounts-secrets-fetcher
  namespace: #@ data.values.staging_namespace
subjects:
- kind: ServiceAccount
  name: cf-api-controllers-service-account
  namespace: #@ data.values.system_namespace
roleRef:
  kind: ClusterRole
  name: "cf:service-accounts-secrets-fetcher"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cf-api-controllers-service-account-statefulsets-updater
  namespace: #@ data.values.workloads_namespace
subjects:
- kind: ServiceAccount
  name: cf-api-controllers-service-account
  namespace: #@ data.values.system_namespace
roleRef:
  kind: ClusterRole
  name: "cf:statefulsets-updater"
  apiGroup: rbac.authorization.k8s.io

#! kpack registry credentials
---
apiVersion: v1
kind: Secret
metadata:
  name: cc-kpack-registry-auth-secret
  namespace: #@ data.values.staging_namespace
  annotations:
    build.pivotal.io/docker: #@ data.values.kpack.registry.hostname
type: kubernetes.io/basic-auth
stringData:
  username: #@ data.values.kpack.registry.username
  password: #@ data.values.kpack.registry.password
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cc-kpack-registry-service-account
  namespace: #@ data.values.staging_namespace
secrets:
  - name: cc-kpack-registry-auth-secret

