---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-app-ingress
  namespace: cf-workloads
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: cf-system
      podSelector:
        matchLabels:
          app.kubernetes.io/component: router
    - namespaceSelector:
        matchLabels:
          name: cf-system
      podSelector:
        matchLabels:
          app.kubernetes.io/component: adapter
  podSelector: {}
  policyTypes:
  - Ingress
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default,runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: cf-workloads-app-psp
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: eirini-controller
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - secret
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: eirini
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - emptyDir
  - projected
  - secret
  - downwardAPI
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: eirini-events
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - secret
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default,runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: cf-workloads-staging-psp
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - emptyDir
  - projected
  - secret
  - downwardAPI
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: eirini-task-reporter
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - secret
  - projected
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  name: eirini
  namespace: cf-workloads
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eirini-controller
  namespace: cf-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eirini-events
  namespace: cf-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opi
  namespace: cf-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eirini-staging
  namespace: cf-workloads
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eirini-task-reporter
  namespace: cf-system
---
apiVersion: v1
data:
  eirini-controller.yml: |
    app_namespace: cf-workloads
    eirini_uri: "https://eirini-opi.cf-system.svc.cluster.local:8085"
    eirini_cert_path: "/etc/eirini/secrets/eirini-client.crt"
    eirini_key_path: "/etc/eirini/secrets/eirini-client.key"
    ca_path: "/etc/eirini/secrets/eirini-client.ca"
  events.yml: |
    app_namespace: cf-workloads
    cc_internal_api: "https://capi.cf-system.svc.cluster.local:9023"
    cc_tls_disabled: false
    cc_cert_path: "/etc/eirini/secrets/cc.crt"
    cc_key_path: "/etc/eirini/secrets/cc.key"
    cc_ca_path: "/etc/eirini/secrets/cc.ca"
  metrics.yml: |
    app_namespace: cf-workloads
    loggregator_address: "doppler-doppler.cf-system.svc.cluster.local:8082"
    loggregator_cert_path: "/etc/eirini/secrets/doppler.crt"
    loggregator_key_path: "/etc/eirini/secrets/doppler.key"
    loggregator_ca_path: "/etc/eirini/secrets/doppler.ca"
  opi.yml: |
    opi:
      app_namespace: cf-workloads
      registry_address: "registry.not-used:443"
      registry_secret_name: app-registry-credentials
      eirini_address: "https://eirini-opi.cf-system.svc.cluster.local:8085"
      downloader_image: eirini/recipe-downloader@sha256:29ad8eb7ea8d19723d6a3129f6bc3a3db2dc65e12bf0ec3a9df7a21110cf01c6
      executor_image: eirini/recipe-executor@sha256:792cd50172fad8beae01a09aef27cf66356949d43c04b3a2c84d723a7f24e862
      uploader_image: eirini/recipe-uploader@sha256:8869f8be894654726b8206062ebcc90bbbb7ad1daac2ac5bffa2e587f95fbcd6

      cc_uploader_secret_name: secrets-2.16.4-2
      cc_uploader_cert_path: cc-server-crt
      cc_uploader_key_path: cc-server-crt-key

      client_certs_secret_name: secrets-2.16.4-2
      client_cert_path: eirini-client-crt
      client_key_path: eirini-client-crt-key

      ca_cert_secret_name: secrets-2.16.4-2
      ca_cert_path: internal-ca-cert

      cc_tls_disabled: false
      cc_cert_path: "/workspace/jobs/opi/secrets/cc.crt"
      cc_key_path: "/workspace/jobs/opi/secrets/cc.key"
      cc_ca_path: "/workspace/jobs/opi/secrets/cc.ca"
      rootfs_version: v75.0.0
      client_ca_path: "/workspace/jobs/opi/secrets/eirini.ca"
      server_cert_path: "/workspace/jobs/opi/secrets/eirini-server.crt"
      server_key_path: "/workspace/jobs/opi/secrets/eirini-server.key"
      tls_port: 8085
      disk_limit_mb: 2048
      application_service_account: eirini
      staging_service_account: eirini-staging
      allow_run_image_as_root: false
      unsafe_allow_automount_service_account_token: false
      serve_plaintext: false
  routing.yml: |
    app_namespace: cf-workloads
    nats_ip: "nats-nats.cf-system.svc.cluster.local"
    nats_port: 4222
  staging-reporter.yml: |
    app_namespace: cf-workloads
    eirini_cert_path: "/etc/eirini/secrets/eirini-client.crt"
    eirini_key_path: "/etc/eirini/secrets/eirini-client.key"
    ca_path: "/etc/eirini/secrets/eirini-client.ca"
  task-reporter.yml: |
    app_namespace: cf-workloads
    cc_tls_disabled: false
    cc_cert_path: "/etc/eirini/secrets/cc.crt"
    cc_cert_path: "/etc/eirini/secrets/cc.crt"
    cc_key_path: "/etc/eirini/secrets/cc.key"
    ca_path: "/etc/eirini/secrets/cc.ca"
kind: ConfigMap
metadata:
  name: eirini
  namespace: cf-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: lrps.eirini.cloudfoundry.org
spec:
  group: eirini.cloudfoundry.org
  names:
    kind: LRP
    plural: lrps
    shortNames:
    - lrp
    singular: lrp
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              GUID:
                type: string
              appGUID:
                type: string
              appName:
                type: string
              appRoutes:
                items:
                  properties:
                    hostname:
                      type: string
                    port:
                      format: in32
                      type: integer
                  type: object
                type: array
              command:
                items:
                  type: string
                type: array
              cpuWeight:
                format: uint8
                type: integer
              diskMB:
                format: int64
                type: integer
              env:
                additionalProperties:
                  type: string
                type: object
              health:
                properties:
                  endpoint:
                    type: string
                  port:
                    format: int32
                    type: integer
                  timeoutMs:
                    format: uint8
                    type: integer
                  type:
                    type: string
                type: object
              image:
                type: string
              instances:
                type: integer
              lastUpdated:
                type: string
              memoryMB:
                format: int64
                type: integer
              orgGUID:
                type: string
              orgName:
                type: string
              ports:
                items:
                  format: int32
                  type: integer
                type: array
              privateRegistry:
                properties:
                  password:
                    type: string
                  server:
                    type: string
                  username:
                    type: string
                type: object
              processType:
                type: string
              runsAsRoot:
                type: boolean
              spaceGUID:
                type: string
              spaceName:
                type: string
              userDefinedAnnotations:
                additionalProperties:
                  type: string
                type: object
              version:
                type: string
              volumeMounts:
                items:
                  properties:
                    claimName:
                      type: string
                    mountPath:
                      type: string
                  type: object
                type: array
            type: object
          status:
            properties:
              instances:
                items:
                  properties:
                    crashCount:
                      format: uint64
                      type: integer
                    crashTimestamp:
                      format: uint64
                      type: integer
                    exitReason:
                      type: string
                    exitStatus:
                      format: uint32
                      type: integer
                    index:
                      format: uint32
                      type: integer
                    since:
                      format: uint64
                      type: integer
                    state:
                      default: Pending
                      enum:
                      - Pending
                      - Running
                      - Failed
                      type: string
                  type: object
                type: array
              replicas:
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: tasks.eirini.cloudfoundry.org
spec:
  group: eirini.cloudfoundry.org
  names:
    kind: Task
    plural: tasks
    shortNames:
    - t
    singular: task
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              appGuid:
                type: string
              appName:
                type: string
              command:
                items:
                  type: string
                type: array
              completionCallback:
                type: string
              cpuWeight:
                format: uint8
                type: integer
              diskMB:
                format: int64
                type: integer
              env:
                additionalProperties:
                  type: string
                type: object
              guid:
                type: string
              image:
                type: string
              memoryMB:
                format: int64
                type: integer
              name:
                type: string
              orgGuid:
                type: string
              orgName:
                type: string
              privateRegistry:
                properties:
                  password:
                    type: string
                  server:
                    type: string
                  username:
                    type: string
                type: object
              spaceGuid:
                type: string
              spaceName:
                type: string
            required:
            - guid
            - image
            - command
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eirini-controller-cluster-role
rules:
- apiGroups:
  - eirini.cloudfoundry.org
  resources:
  - lrps
  - tasks
  verbs:
  - watch
  - list
  - get
- apiGroups:
  - eirini.cloudfoundry.org
  resources:
  - lrps/status
  verbs:
  - update
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - update
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - create
  - update
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - update
  - get
  - watch
  - list
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eirini-cluster-role
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - list
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - update
  - delete
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - delete
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eirini-task-reporter
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - delete
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - delete
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eirini-controller-cluster-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eirini-controller-cluster-role
subjects:
- kind: ServiceAccount
  name: eirini-controller
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eirini-cluster-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eirini-cluster-role
subjects:
- kind: ServiceAccount
  name: opi
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: eirini-events
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eirini-nodes-policy
subjects:
- kind: ServiceAccount
  name: eirini-events
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eirini-task-reporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eirini-task-reporter
subjects:
- kind: ServiceAccount
  name: eirini-task-reporter
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cf-workloads-app-role
  namespace: cf-workloads
rules:
- apiGroups:
  - policy
  resourceNames:
  - cf-workloads-app-psp
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-controller-role
  namespace: cf-system
rules:
- apiGroups:
  - policy
  resourceNames:
  - eirini-controller
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-role
  namespace: cf-system
rules:
- apiGroups:
  - policy
  resourceNames:
  - eirini
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-events
  namespace: cf-workloads
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
- apiGroups:
  - events.k8s.io
  resources:
  - pods
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-events-psp
  namespace: cf-system
rules:
- apiGroups:
  - policy
  resourceNames:
  - eirini-events
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cf-workloads-staging-role
  namespace: cf-workloads
rules:
- apiGroups:
  - policy
  resourceNames:
  - cf-workloads-staging-psp
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-task-reporter-psp
  namespace: cf-system
rules:
- apiGroups:
  - policy
  resourceNames:
  - eirini-task-reporter
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cf-workloads-app-rolebinding
  namespace: cf-workloads
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cf-workloads-app-role
subjects:
- kind: ServiceAccount
  name: eirini
  namespace: cf-workloads
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-controller-rolebinding
  namespace: cf-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-controller-role
subjects:
- kind: ServiceAccount
  name: eirini-controller
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-rolebinding
  namespace: cf-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-role
subjects:
- kind: ServiceAccount
  name: opi
  namespace: cf-system
- kind: ServiceAccount
  name: eirini-rootfs-patcher
  namespace: cf-system
- kind: ServiceAccount
  name: eirini-secret-smuggler
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-events
  namespace: cf-workloads
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-events
subjects:
- kind: ServiceAccount
  name: eirini-events
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-events-psp
  namespace: cf-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-events-psp
subjects:
- kind: ServiceAccount
  name: eirini-events
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cf-workloads-staging-rolebinding
  namespace: cf-workloads
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cf-workloads-staging-role
subjects:
- kind: ServiceAccount
  name: eirini-staging
  namespace: cf-workloads
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-task-reporter-psp
  namespace: cf-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-task-reporter-psp
subjects:
- kind: ServiceAccount
  name: eirini-task-reporter
  namespace: cf-system
---
apiVersion: v1
kind: Service
metadata:
  name: eirini
  namespace: cf-system
spec:
  ports:
  - name: https
    port: 8085
    protocol: TCP
  selector:
    name: eirini
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas: null
        URL: index.docker.io/eirini/opi@sha256:c7c60d73c89db5c1a74019b86db0fb93686ed5572984411f1d4a027681aec457
  name: eirini
  namespace: cf-system
spec:
  selector:
    matchLabels:
      name: eirini
  template:
    metadata:
      labels:
        eirinifs_version: v75.0.0
        name: eirini
    spec:
      containers:
      - image: index.docker.io/eirini/opi@sha256:c7c60d73c89db5c1a74019b86db0fb93686ed5572984411f1d4a027681aec457
        imagePullPolicy: Always
        name: opi
        ports:
        - containerPort: 8085
          name: https
        resources:
          requests:
            cpu: 20m
            memory: 20Mi
        volumeMounts:
        - mountPath: /workspace/jobs/opi/config
          name: config-map-volume
        - mountPath: /workspace/jobs/opi/secrets
          name: cf-secrets
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
      serviceAccountName: opi
      volumes:
      - configMap:
          items:
          - key: opi.yml
            path: opi.yml
          name: eirini
        name: config-map-volume
      - name: cf-secrets
        projected:
          sources:
          - secret:
              items:
              - key: tls.crt
                path: cc.crt
              - key: tls.key
                path: cc.key
              name: eirini-internal-tls-certs
          - secret:
              items:
              - key: tls.ca
                path: cc.ca
              name: eirini-internal-tls-certs
          - secret:
              items:
              - key: tls.crt
                path: eirini-server.crt
              - key: tls.key
                path: eirini-server.key
              name: eirini-internal-tls-certs
          - secret:
              items:
              - key: tls.ca
                path: eirini.ca
              name: eirini-internal-tls-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas: null
        URL: index.docker.io/eirini/eirini-controller@sha256:142c4f335d8a117300eac610accd7183a0bfa5c793594deee5487b9af95f3a33
  name: eirini-controller
  namespace: cf-system
spec:
  selector:
    matchLabels:
      name: eirini-controller
  template:
    metadata:
      labels:
        name: eirini-controller
    spec:
      containers:
      - image: index.docker.io/eirini/eirini-controller@sha256:142c4f335d8a117300eac610accd7183a0bfa5c793594deee5487b9af95f3a33
        imagePullPolicy: Always
        name: eirini-controller
        resources:
          requests:
            cpu: 15m
            memory: 15Mi
        volumeMounts:
        - mountPath: /etc/eirini/config
          name: config-map-volume
        - mountPath: /etc/eirini/secrets
          name: cf-secrets
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
      serviceAccountName: eirini-controller
      volumes:
      - configMap:
          items:
          - key: eirini-controller.yml
            path: eirini-controller.yml
          name: eirini
        name: config-map-volume
      - name: cf-secrets
        secret:
          items:
          - key: tls.crt
            path: eirini-client.crt
          - key: tls.key
            path: eirini-client.key
          - key: tls.ca
            path: eirini-client.ca
          secretName: eirini-internal-tls-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas: null
        URL: index.docker.io/eirini/event-reporter@sha256:62a30205593b22dfb954dfe803c0e01866e4ac08717ec3089c4c32aec2f00457
  name: eirini-events
  namespace: cf-system
spec:
  selector:
    matchLabels:
      name: eirini-events
  template:
    metadata:
      labels:
        name: eirini-events
    spec:
      containers:
      - image: index.docker.io/eirini/event-reporter@sha256:62a30205593b22dfb954dfe803c0e01866e4ac08717ec3089c4c32aec2f00457
        imagePullPolicy: Always
        name: event-reporter
        resources:
          requests:
            cpu: 15m
            memory: 15Mi
        volumeMounts:
        - mountPath: /etc/eirini/config
          name: config-map-volume
        - mountPath: /etc/eirini/secrets
          name: cf-secrets
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
      serviceAccountName: eirini-events
      volumes:
      - configMap:
          items:
          - key: events.yml
            path: events.yml
          name: eirini
        name: config-map-volume
      - name: cf-secrets
        projected:
          sources:
          - secret:
              items:
              - key: tls.crt
                path: cc.crt
              - key: tls.key
                path: cc.key
              name: eirini-internal-tls-certs
          - secret:
              items:
              - key: tls.ca
                path: cc.ca
              name: eirini-internal-tls-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas: null
        URL: index.docker.io/eirini/task-reporter@sha256:23e081f0875c40f59526aa2f3bc77cd25c26776d840b2e6e49c4b0f2cbf5a04a
  name: eirini-task-reporter
  namespace: cf-system
spec:
  selector:
    matchLabels:
      name: eirini-task-reporter
  template:
    metadata:
      labels:
        name: eirini-task-reporter
    spec:
      containers:
      - image: index.docker.io/eirini/task-reporter@sha256:23e081f0875c40f59526aa2f3bc77cd25c26776d840b2e6e49c4b0f2cbf5a04a
        imagePullPolicy: Always
        name: task-reporter
        resources:
          requests:
            cpu: 15m
            memory: 15Mi
        volumeMounts:
        - mountPath: /etc/eirini/config
          name: config-map-volume
        - mountPath: /etc/eirini/secrets
          name: cf-secrets
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
      serviceAccountName: eirini-task-reporter
      volumes:
      - configMap:
          items:
          - key: task-reporter.yml
            path: task-reporter.yml
          name: eirini
        name: config-map-volume
      - name: cf-secrets
        secret:
          items:
          - key: tls.crt
            path: cc.crt
          - key: tls.key
            path: cc.key
          - key: tls.ca
            path: cc.ca
          secretName: eirini-internal-tls-certs
