#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#! this secret contains the certificate/key combo used for the external system domain
---
apiVersion: v1
kind: Secret
metadata:
  name: istio-ingressgateway-certs
  namespace: istio-system
  annotations:
    kapp.k14s.io/change-rule.istio-ingressgateway: "upsert before upserting istio.io/ingressgateway"
data:
  tls.key: #@ data.values.system_certificate.key
  tls.crt: #@ data.values.system_certificate.crt

#! the following overlay ensures the above Secret is created before the ingressgateway Deployment since we're not using SDS
#@overlay/match by=overlay.subset({"kind":"DaemonSet","metadata":{"name":"istio-ingressgateway"}})
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    #@overlay/match missing_ok=True
    kapp.k14s.io/change-group: istio.io/ingressgateway

#! this gateway is used to expose CF services in the cluster, externally
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-ingressgateway
  namespace: #@ data.values.system_namespace
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    #! TODO: restrict this
    - '*'
    port:
      name: http
      number: 80
      protocol: HTTP
  - hosts:
    - '*'
    port:
      name: https
      number: 443
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: istio-ingressgateway-certs

#! This will set overlay a static IP for the istio load balancer.
#@overlay/match by=overlay.subset({"kind": "Service", "metadata":{"name": "istio-ingressgateway"}})
---
#@ if data.values.istio_static_ip:
spec:
  #@overlay/match missing_ok=True
  loadBalancerIP: #@ data.values.istio_static_ip
#@ end
