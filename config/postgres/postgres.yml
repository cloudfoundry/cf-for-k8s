#@ load("@ytt:assert", "assert")
#@ load("@ytt:data", "data")
#@ load("@ytt:library", "library")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:template", "template")
#@ load("postgres.star", "cfdb_enabled")

#@ def add_cf_db_namespace():
#@overlay/match by=overlay.all, expects="1+"
---
metadata:
  #@overlay/match missing_ok=True
  namespace: cf-db
#@ end

#@ if cfdb_enabled():
---
apiVersion: v1
kind: Namespace
metadata:
  name: cf-db
  labels:
    cf-for-k8s.cloudfoundry.org/cf-db-ns: ""

---
apiVersion: v1
kind: Secret
metadata:
  name: cf-db-admin-secret
  namespace: cf-db
stringData:
  #@ if len(data.values.cf_db.admin_password) == 0:
  #@  assert.fail("cf_db.admin_password cannot be empty")
  #@ end
  postgresql-password: #@ data.values.cf_db.admin_password

---
apiVersion: v1
kind: Secret
metadata:
  name: cf-db-credentials
  namespace: cf-db
stringData:
  #@ if len(data.values.capi.database.user) == 0:
  #@  assert.fail("capi.database.user cannot be empty")
  #@ end
  ccdb-username: #@ data.values.capi.database.user
  #@ if len(data.values.capi.database.password) == 0:
  #@  assert.fail("capi.database.password cannot be empty")
  #@ end
  ccdb-password: #@ data.values.capi.database.password
  #@ if len(data.values.uaa.database.user) == 0:
  #@  assert.fail("uaa.database.user cannot be empty")
  #@ end
  uaadb-username: #@ data.values.uaa.database.user
  #@ if len(data.values.uaa.database.password) == 0:
  #@  assert.fail("uaa.database.password cannot be empty")
  #@ end
  uaadb-password: #@ data.values.uaa.database.password

#@overlay/match by=overlay.subset({"kind": "ConfigMap", "metadata":{"name":"cf-db-postgresql-init-scripts"}})
---
#@ ccdb = data.values.capi.database
#@ uaadb = data.values.uaa.database
#@yaml/text-templated-strings
data:
  #@overlay/match missing_ok=True
  init.sh: |
    #!/bin/bash
    CCDB_USERNAME=$(cat /docker-entrypoint-initdb.d/secret/ccdb-username)
    CCDB_PASSWORD=$(cat /docker-entrypoint-initdb.d/secret/ccdb-password)
    UAADB_USERNAME=$(cat /docker-entrypoint-initdb.d/secret/uaadb-username)
    UAADB_PASSWORD=$(cat /docker-entrypoint-initdb.d/secret/uaadb-password)
    cat > /tmp/setup_db.sql <<EOT
    CREATE DATABASE (@= ccdb.name @);
    CREATE ROLE ${CCDB_USERNAME} LOGIN PASSWORD '${CCDB_PASSWORD}';
    CREATE DATABASE (@= uaadb.name @);
    CREATE ROLE ${UAADB_USERNAME} LOGIN PASSWORD '${UAADB_PASSWORD}';
    EOT
    psql -U postgres -f /tmp/setup_db.sql
    psql -U postgres -d (@= ccdb.name @) -c "CREATE EXTENSION citext"
    psql -U postgres -d (@= uaadb.name @) -c "CREATE EXTENSION citext"

--- #@ template.replace(overlay.apply(library.get("postgres").eval(), add_cf_db_namespace()))
#@ end
